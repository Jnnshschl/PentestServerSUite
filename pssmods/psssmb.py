import threading
import logging as logger
from pathlib import Path

from colorama import Fore
from impacket.smbserver import SimpleSMBServer


class PssSmbServer(SimpleSMBServer):
    def __init__(
        self, address: str, port: int, serve_folder: Path, no_smb2: bool = False
    ) -> None:
        prev_logging_level = logger.getLogger().level
        logger.getLogger().setLevel(logger.WARNING)

        SimpleSMBServer.__init__(self, address, port)
        self.address = address
        self.port = port
        self.serve_folder = serve_folder

        self.setSMB2Support(not no_smb2)
        self.default_share = "NONE"

        self.smb_thread = threading.Thread(
            target=lambda s: s.start(), args=[self], daemon=True
        )
        self.smb_thread.start()

        logger.getLogger().setLevel(prev_logging_level)
        logger.info(
            f"Started SMB server on {Fore.LIGHTYELLOW_EX}{address}:{port}{Fore.RESET}"
        )

    def set_folder(self, folder: Path):
        self.serve_folder = folder

        for share in self._SimpleSMBServer__smbConfig.sections():
            if share not in ["global", "IPC$"]:
                try:
                    self.removeShare(share)
                except:
                    logger.warning(
                        f'Failed to remove SMB share "{Fore.LIGHTRED_EX}{share}{Fore.RESET}"'
                    )

        share_name = folder.name.upper()
        self.addShare(share_name, str(folder.absolute()))
        self.default_share = share_name
