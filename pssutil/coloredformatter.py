import logging as logger

from colorama import Fore

LOG_COLOR_MAP = {
    logger.getLevelName(logger.DEBUG): Fore.LIGHTGREEN_EX,
    logger.getLevelName(logger.INFO): Fore.LIGHTBLUE_EX,
    logger.getLevelName(logger.WARNING): Fore.LIGHTYELLOW_EX,
    logger.getLevelName(logger.ERROR): Fore.LIGHTRED_EX,
    logger.getLevelName(logger.CRITICAL): Fore.RED,
}


class ColoredFormatter(logger.Formatter):
    @staticmethod
    def init(loglevel=logger.INFO, print_logger_name=False):
        current_logger = logger.getLogger()
        current_logger.setLevel(loglevel)

        logging_stream = logger.StreamHandler()
        logging_stream.setLevel(loglevel)

        loggername = "%(name)s " if print_logger_name else ""
        logging_formatter = ColoredFormatter(f"\r%(asctime)s {loggername}%(levelname)s> %(message)s")
        logging_formatter.datefmt = "%H:%M:%S"
        logging_stream.setFormatter(logging_formatter)
        current_logger.addHandler(logging_stream)

    def format(self, record):
        if record.levelname in LOG_COLOR_MAP:
            record.levelname = f"{LOG_COLOR_MAP[record.levelname]}{record.levelname}{Fore.RESET}"
        return logger.Formatter.format(
            self,
            record,
        )
