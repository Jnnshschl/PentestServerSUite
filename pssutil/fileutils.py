import subprocess
from json import dumps, loads
from os import makedirs
from pathlib import Path
from tempfile import NamedTemporaryFile
from uuid import uuid4


def load_json(file_path):
    if not file_path.parent.exists():
        makedirs(file_path.parent)

    if file_path.exists():
        try:
            with open(file_path, "r") as f:
                return loads(f.read())
        except:
            return None
    else:
        return {}


def save_json(file_path, obj):
    if not file_path.parent.exists():
        makedirs(file_path.parent)

    try:
        with open(file_path, "w+") as f:
            f.write(dumps(obj, indent=2, sort_keys=True))
            return True
    except:
        pass
    return False


def generate_random_filename(folder: Path, ext: str, lenght: int = 8):
    if not folder.exists():
        makedirs()

    filename = abs(hash(uuid4().hex)) % (10**lenght)
    return Path(folder, f"{filename}{ext}")


def execute_and_read_file_lines(cmd: str, raw: bool = False):
    with NamedTemporaryFile("w+") as result_file:
        subprocess.run([cmd.replace("{FILE}", result_file.name)], shell=True, capture_output=True, text=True, check=True)

        if raw:
            return result_file.read()
        else:
            return [x.strip().lower() for x in result_file.readlines()]
