import logging as logger
import os

import pyperclip
from python_hosts import Hosts, HostsEntry

from pssutil.cmdutils import CmdLenValidator


def add_cmd(pm, cmd):
    cmd.add(["http"], lambda args: cmd_copy_or_execute(args, f"http://{pm.cvars.LHOST}/"), ["copy"])
    cmd.add(["ftp"], lambda args: cmd_copy_or_execute(args, f"anonymous@{pm.cvars.LHOST}"), ["copy"])
    cmd.add(["smb"], lambda args: cmd_copy_or_execute(args, f"\\\\{pm.cvars.LHOST}\\"), ["copy"])

    cmd.add(["nc"], lambda args: cmd_copy_or_execute(args, f"nc -lvnp {pm.cvars.LPORT}"), ["copy", "execute", "tmux", "xfce4"])
    cmd.add(
        ["ncrl"], lambda args: cmd_copy_or_execute(args, f"rlwrap -cAr nc -lvnp {pm.cvars.LPORT}"), ["copy", "execute", "tmux", "xfce4"]
    )
    cmd.add(["ncat"], lambda args: cmd_copy_or_execute(args, f"ncat -lvnp {pm.cvars.LPORT}"), ["copy", "execute", "tmux", "xfce4"])
    cmd.add(
        ["socat"],
        lambda args: cmd_copy_or_execute(args, f"socat file:`tty`,raw,echo=0 tcp-listen:{pm.cvars.LPORT}"),
        ["copy", "execute", "tmux", "xfce4"],
    )
    cmd.add(
        ["msfl"],
        lambda args: cmd_copy_or_execute(
            args, f'msfconsole -q -x "use multi/handler; set LHOST {pm.cvars.LHOST}; set LPORT {pm.cvars.LPORT}; run"'
        ),
        ["copy", "execute", "tmux", "xfce4"],
    )

    cmd.add(["pty"], lambda args: cmd_copy_or_execute(args, f"python -c 'import pty; pty.spawn(\"{pm.cvars.SHELLBIN}\")'"), ["copy"])

    hosts_handler = cmd.add(["hosts"])

    def add_host_entry(args):
        hosts = Hosts()
        hosts.add([HostsEntry(address=str(args[0]), names=[str(x) for x in args[1:]])])
        hosts.write()

    hosts_handler.add(["add"], CmdLenValidator(add_host_entry, 2, ["address", "hostnames"]))

    def del_host_entry(args):
        hosts = Hosts()
        hosts.remove_all_matching(address=str(args[0]))
        hosts.remove_all_matching(name=str(args[0]))
        hosts.write()

    hosts_handler.add(["del"], CmdLenValidator(del_host_entry, 1, ["address or hostname"]))


def cmd_copy_or_execute(remaining_args: list, s: str):
    if len(remaining_args) > 0:
        first_arg_lower = remaining_args[0].lower()

        if first_arg_lower in ["c", "copy"]:
            print(s)

            try:
                pyperclip.copy(s)
            except Exception as ex:
                logger.error(f"Failed to copy to clipboard: {str(ex)}")

        elif first_arg_lower in ["e", "execute"]:
            try:
                os.system(s)
            except Exception as ex:
                logger.error(f'Failed to execute "{s}": {str(ex)}')

        elif first_arg_lower in ["t", "tmux"]:
            try:
                os.system(f"tmux new '{s}'")
            except Exception as ex:
                logger.error(f'Failed to start tmux "{s}": {str(ex)}')

        elif first_arg_lower in ["xfce4"]:
            try:
                os.system(f"sudo -u kali -E xfce4-terminal -e '{s}'")
            except Exception as ex:
                logger.error(f'Failed to start "sudo -u kali -E xfce4-terminal -e {s}": {str(ex)}')
    else:
        print(s)
