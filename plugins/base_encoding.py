def add_cmd(pm, cmd):
    import base64

    b16_handler = cmd.add(["b16", "base16"])
    b16_handler.add(["e", "encode"], lambda args: print(base64.b16encode(" ".join(args).encode()).decode()))
    b16_handler.add(["d", "decode"], lambda args: print(base64.b16decode("".join(args).encode()).decode()))

    b32_handler = cmd.add(["b32", "base32"])
    b32_handler.add(["e", "encode"], lambda args: print(base64.b32encode(" ".join(args).encode()).decode()))
    b32_handler.add(["d", "decode"], lambda args: print(base64.b32decode("".join(args).encode()).decode()))
    b32_handler.add(["c", "cmd"], lambda args: print(f'echo \'{"".join(args)}\' | base32 -d'))

    b64_handler = cmd.add(["b64", "base64"])
    b64_handler.add(["e", "encode"], lambda args: print(base64.b64encode(" ".join(args).encode()).decode()))
    b64_handler.add(["d", "decode"], lambda args: print(base64.b64decode("".join(args).encode()).decode()))
    b64_handler.add(["c", "cmd"], lambda args: print(f'echo \'{"".join(args)}\' | base64 -d'))

    b85_handler = cmd.add(["b85", "base85"])
    b85_handler.add(["e", "encode"], lambda args: print(base64.b85encode(" ".join(args).encode()).decode()))
    b85_handler.add(["d", "decode"], lambda args: print(base64.b85decode("".join(args).encode()).decode()))
