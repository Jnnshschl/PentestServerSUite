import base64

from pssutil.cmdutils import CmdLenValidator


def add_cmd(pm, cmd):
    b16_handler = cmd.add(["base16"])
    b16_handler.add(["e", "encode"], CmdLenValidator(lambda args: print(base64.b16encode(" ".join(args).encode()).decode()), 1, ["input"]))
    b16_handler.add(["d", "decode"], CmdLenValidator(lambda args: print(base64.b16decode("".join(args).encode()).decode()), 1, ["input"]))

    b32_handler = cmd.add(["base32"])
    b32_handler.add(["e", "encode"], CmdLenValidator(lambda args: print(base64.b32encode(" ".join(args).encode()).decode()), 1, ["input"]))
    b32_handler.add(["d", "decode"], CmdLenValidator(lambda args: print(base64.b32decode("".join(args).encode()).decode()), 1, ["input"]))
    b32_handler.add(["c", "cmd"], CmdLenValidator(lambda args: print(f'echo \'{"".join(args)}\' | base32 -d'), 1, ["input"]))

    b64_handler = cmd.add(["base64"])
    b64_handler.add(["e", "encode"], CmdLenValidator(lambda args: print(base64.b64encode(" ".join(args).encode()).decode()), 1, ["input"]))
    b64_handler.add(["d", "decode"], CmdLenValidator(lambda args: print(base64.b64decode("".join(args).encode()).decode()), 1, ["input"]))
    b64_handler.add(["c", "cmd"], CmdLenValidator(lambda args: print(f'echo \'{"".join(args)}\' | base64 -d'), 1, ["input"]))

    b85_handler = cmd.add(["base85"])
    b85_handler.add(["e", "encode"], CmdLenValidator(lambda args: print(base64.b85encode(" ".join(args).encode()).decode()), 1, ["input"]))
    b85_handler.add(["d", "decode"], CmdLenValidator(lambda args: print(base64.b85decode("".join(args).encode()).decode()), 1, ["input"]))
